---
import { Image } from 'astro:assets'
import { Star } from '@lucide/astro'

type letterboxd = {
  items: {
    title: string
    year: number
    rating: number
    rewatch: boolean
    date: string
    link: string
    poster: {
      tiny: string
      smaller: string
      small: string
      medium: string
      large: string
      xlarge: string
    }
    review?: string
  }[]
}

const res = await fetch('https://api.invisyarcticfox.uk/letterboxd')
const d:letterboxd = await res.json()
const items = d.items.slice(0,15)
---

{
  items.map(({ title, year, date, rating, poster, review, rewatch, link }, i) => {
    const formatDate = new Date(date).toLocaleDateString('en-GB')
    const fullStar = Math.floor(rating)
    const hasHalfStar = rating % 1 !== 0
    return (
      <>
        <div class='film'>
          <div class='poster'>
            <Image src={poster.medium} alt={title} inferSize loading={i > 2 ? 'lazy': 'eager'} />
          </div>
          <div class='info'>
            <div class='title'>
              <a href={link.replace('/invisyarcticfox/', '/')} target='_blank' rel='noopener noreferrer'>
                <b>{title}</b>
              </a>
              <i>({year})</i>
            </div>
            <div class='date'>{rewatch ? 'Rewatched' : 'Watched'} on <span>{formatDate}</span></div>
            <div class='review'>
              <div class='rating'>
                { Array.from({ length:fullStar }).map(() => <Star/> ) }
                { hasHalfStar && <Star class={'half'} />}
                </div>
              { review && <span class='txt' set:html={review} /> }
            </div>
          </div>
        </div>
      </>
    )
  })
}

<div style='text-align: center; padding: 20px 0;'>
  <a
    class='noline' href='https://letterboxd.com/invisyarcticfox'
    target='_blank' rel='noopener noreferrer'>
    More...
  </a>
</div>